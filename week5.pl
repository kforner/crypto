#! /usr/bin/env perl
use strict;
use warnings;
use Smart::Comments;

# dies if GMP cannot be loaded:

use bigint only => 'GMP';

my $p='13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084171';
my $g = '11717829880366207009516117596335367088558084999998952205599979459063929499736583746670572176471460312928594829675428279466566527115212748467589894601965568';
my $h='3239475104050450443565264378728065788649097520952449527834792452971981976143292558073856937958553180532878928001494706097394108577585732452307673444020333';

$p += 0;
$g += 0;
$h += 0;
print "p=$p, ref=", ref($p), "\n";

my $B = 2**20;
print $B, "\n";


print $g->bpow($B), "\n";

my $gb = ($g**$B) % $p;
print "gb=$gb\n";


my %H1;
my $g1 = 1;

foreach my $x1 (0..$B-1) { ### x1 ===[%]     done
    my $u = ($h /$g1) % $p;
#    print "u=$u\n";
    $H1{$u} = $x1;
    $g1 = ($g*$g1) % $p;
}


my $g0 = 1;
my ($x0, $x1);
foreach my $i (0..$B) { ### x0 ===[%]     done
    if ( exists $H1{$g0} ) {
        $x1 = $H1{$g0};
        $x0 = $i;
        last;
    }
    $g0 = ($g0*$gb) % $p;
}

print "x0=$x0\nx1=$x1\n";
my $x = $x0*$B + $x1;
# check
my $h2 = $g**$x;
print "h2=$h2\n";
